[
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Client/ProductMeasurementUnitStorageToStorageClientBridge.php",
        "description": "Bridges: Type should be defined for param `key` in method `Spryker\\Client\\ProductMeasurementUnitStorage\\Dependency\\Client\\ProductMeasurementUnitStorageToStorageClientBridge::get()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Client/ProductMeasurementUnitStorageToStorageClientInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `get()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Client/ProductMeasurementUnitStorageToStorageClientInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getMulti()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Client/ProductMeasurementUnitStorageToStoreClientInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getCurrentStore()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToSynchronizationServiceBridge.php",
        "description": "Bridges: Type should be defined for param `resourceName` in method `Spryker\\Client\\ProductMeasurementUnitStorage\\Dependency\\Service\\ProductMeasurementUnitStorageToSynchronizationServiceBridge::getStorageKeyBuilder()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToSynchronizationServiceInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getStorageKeyBuilder()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `jsonValue` in method `Spryker\\Client\\ProductMeasurementUnitStorage\\Dependency\\Service\\ProductMeasurementUnitStorageToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `assoc` in method `Spryker\\Client\\ProductMeasurementUnitStorage\\Dependency\\Service\\ProductMeasurementUnitStorageToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `depth` in method `Spryker\\Client\\ProductMeasurementUnitStorage\\Dependency\\Service\\ProductMeasurementUnitStorageToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToUtilEncodingServiceBridge.php",
        "description": "Bridges: Type should be defined for param `options` in method `Spryker\\Client\\ProductMeasurementUnitStorage\\Dependency\\Service\\ProductMeasurementUnitStorageToUtilEncodingServiceBridge::decodeJson()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Client/ProductMeasurementUnitStorage/Dependency/Service/ProductMeasurementUnitStorageToUtilEncodingServiceInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `decodeJson()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToEventBehaviorFacadeBridge.php",
        "description": "Bridges: Method getEventTransferIds() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToEventBehaviorFacadeBridge.php",
        "description": "Bridges: Type should be defined for param `foreignKeyColumnName` in method `Spryker\\Zed\\ProductMeasurementUnitStorage\\Dependency\\Facade\\ProductMeasurementUnitStorageToEventBehaviorFacadeBridge::getEventTransferForeignKeys()`.",
        "rule": "BridgeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToEventBehaviorFacadeBridge.php",
        "description": "Bridges: Method getEventTransferForeignKeys() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToEventBehaviorFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getEventTransferIds()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToEventBehaviorFacadeInterface.php",
        "description": "Bridges: The bridge interface has incorrect method signature for `getEventTransferForeignKeys()`. Missed return type. That violates the rule \"All bridge interface methods must have exactly the same or more strict signature as their parent\"",
        "rule": "BridgeMethodsInterfaceRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method getSalesUnitsByIdProduct() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method getSalesUnitsByIds() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method getSalesUnits() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method findProductMeasurementUnitTransfers() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method findAllProductMeasurementUnitTransfers() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method findFilteredProductMeasurementUnitTransfers() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    },
    {
        "fileName": "src/Spryker/Zed/ProductMeasurementUnitStorage/Dependency/Facade/ProductMeasurementUnitStorageToProductMeasurementUnitFacadeBridge.php",
        "description": "Bridges: Method findFilteredProductMeasurementSalesUnitTransfers() must have `public function get<DomainEntity>Collection(<DomainEntity>CriteriaTransfer): <DomainEntity>CollectionTransfer;` signature.",
        "rule": "BridgeFacadeMethodsRule",
        "ruleset": "Spryker",
        "priority": "2"
    }
]
